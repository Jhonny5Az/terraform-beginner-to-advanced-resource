2025-09-05T13:57:30.104-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T13:57:30.106-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T13:57:30.106-0500 [INFO]  CLI args: []string{"terraform", "fmt"}
2025-09-05T13:57:30.107-0500 [INFO]  CLI command args: []string{"fmt"}
2025-09-05T14:00:13.673-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:00:13.674-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:00:13.674-0500 [INFO]  CLI args: []string{"terraform", "fmt"}
2025-09-05T14:00:13.674-0500 [INFO]  CLI command args: []string{"fmt"}
2025-09-05T14:00:17.628-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:00:17.628-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:00:17.629-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-05T14:00:17.630-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-05T14:00:17.646-0500 [INFO]  backend/local: starting Plan operation
2025-09-05T14:00:34.714-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:00:34.715-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:00:34.715-0500 [INFO]  CLI args: []string{"terraform", "init"}
2025-09-05T14:00:34.715-0500 [INFO]  CLI command args: []string{"init"}
2025-09-05T14:00:47.206-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:00:47.209-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:00:47.209-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-05T14:00:47.210-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-05T14:00:47.590-0500 [INFO]  backend/local: starting Plan operation
2025-09-05T14:00:47.597-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:00:49.602-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:00:49.600-0500
2025-09-05T14:00:50.257-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64441
2025-09-05T14:00:50.269-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:00:50.440-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:00:50.440-0500
2025-09-05T14:00:50.528-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64467
2025-09-05T14:00:50.528-0500 [INFO]  backend/local: plan calling Plan
2025-09-05T14:00:50.530-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:00:50.691-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:00:50.690-0500
2025-09-05T14:00:50.769-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=13b6e501-4e53-0301-0a8d-6c7ab464c625 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws @module=aws.aws-base timestamp=2025-09-05T14:00:50.769-0500
2025-09-05T14:00:51.642-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=13b6e501-4e53-0301-0a8d-6c7ab464c625 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-05T14:00:51.642-0500
2025-09-05T14:00:51.667-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
2025-09-05T14:00:51.674-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64493
2025-09-05T14:00:51.675-0500 [INFO]  backend/local: plan operation completed
2025-09-05T14:06:05.047-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:06:05.048-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:06:05.048-0500 [INFO]  CLI args: []string{"terraform", "fmt"}
2025-09-05T14:06:05.050-0500 [INFO]  CLI command args: []string{"fmt"}
2025-09-05T14:06:07.460-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:06:07.460-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:06:07.460-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-05T14:06:07.461-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-05T14:06:08.056-0500 [INFO]  backend/local: starting Plan operation
2025-09-05T14:06:08.060-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:08.341-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:08.340-0500
2025-09-05T14:06:08.968-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67694
2025-09-05T14:06:08.969-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:09.116-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:09.114-0500
2025-09-05T14:06:09.187-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67697
2025-09-05T14:06:09.187-0500 [INFO]  backend/local: plan calling Plan
2025-09-05T14:06:09.187-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:09.338-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:09.336-0500
2025-09-05T14:06:09.407-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_req_id=470ff9a0-acf9-1cee-d6ca-0101ae145335 tf_rpc=ConfigureProvider @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-05T14:06:09.407-0500
2025-09-05T14:06:10.286-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=470ff9a0-acf9-1cee-d6ca-0101ae145335 timestamp=2025-09-05T14:06:10.286-0500
2025-09-05T14:06:10.311-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
2025-09-05T14:06:10.318-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67698
2025-09-05T14:06:10.319-0500 [INFO]  backend/local: plan operation completed
2025-09-05T14:06:26.929-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:06:26.930-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:06:26.930-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-05T14:06:26.931-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-05T14:06:27.343-0500 [INFO]  backend/local: starting Apply operation
2025-09-05T14:06:27.351-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:27.520-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:27.519-0500
2025-09-05T14:06:28.101-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67894
2025-09-05T14:06:28.103-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:28.252-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:28.251-0500
2025-09-05T14:06:28.349-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67898
2025-09-05T14:06:28.349-0500 [INFO]  backend/local: apply calling Plan
2025-09-05T14:06:28.350-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:28.506-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:28.505-0500
2025-09-05T14:06:28.580-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=6c57c973-3cf5-bcd3-240f-62f64b476d69 tf_rpc=ConfigureProvider @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-05T14:06:28.580-0500
2025-09-05T14:06:29.218-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=6c57c973-3cf5-bcd3-240f-62f64b476d69 timestamp=2025-09-05T14:06:29.218-0500
2025-09-05T14:06:29.237-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-05T14:06:29.243-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67919
2025-09-05T14:06:29.323-0500 [INFO]  backend/local: apply calling Apply
2025-09-05T14:06:29.325-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:06:29.475-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:06:29.474-0500
2025-09-05T14:06:29.542-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=a7e5b94b-3d47-fcde-9817-bfe400dd38ca timestamp=2025-09-05T14:06:29.542-0500
2025-09-05T14:06:30.174-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=a7e5b94b-3d47-fcde-9817-bfe400dd38ca @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-05T14:06:30.174-0500
2025-09-05T14:06:30.187-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
2025-09-05T14:06:30.189-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-05T14:06:34.165-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67925
2025-09-05T14:08:53.987-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:08:53.988-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:08:53.988-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-05T14:08:53.988-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-05T14:08:54.528-0500 [INFO]  backend/local: starting Plan operation
2025-09-05T14:08:54.538-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:08:54.779-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:08:54.777-0500
2025-09-05T14:08:55.362-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69549
2025-09-05T14:08:55.363-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:08:55.510-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:08:55.509-0500
2025-09-05T14:08:55.582-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69552
2025-09-05T14:08:55.582-0500 [INFO]  backend/local: plan calling Plan
2025-09-05T14:08:55.585-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:08:55.732-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:08:55.731-0500
2025-09-05T14:08:55.801-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_req_id=af8233c0-c83e-a829-5e0e-c4126f80a3af tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-05T14:08:55.801-0500
2025-09-05T14:08:56.478-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_req_id=af8233c0-c83e-a829-5e0e-c4126f80a3af timestamp=2025-09-05T14:08:56.478-0500
2025-09-05T14:08:57.288-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})}) nor prior value cty.SetValEmpty(cty.Object(map[string]cty.Type{"cidr_blocks":cty.List(cty.String), "description":cty.String, "from_port":cty.Number, "ipv6_cidr_blocks":cty.List(cty.String), "prefix_list_ids":cty.List(cty.String), "protocol":cty.String, "security_groups":cty.Set(cty.String), "self":cty.Bool, "to_port":cty.Number}))
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-05T14:08:57.295-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69553
2025-09-05T14:08:57.297-0500 [INFO]  backend/local: plan operation completed
2025-09-05T14:08:59.089-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:08:59.090-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:08:59.090-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-05T14:08:59.090-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-05T14:08:59.467-0500 [INFO]  backend/local: starting Apply operation
2025-09-05T14:08:59.474-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:08:59.629-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:08:59.628-0500
2025-09-05T14:09:00.195-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69609
2025-09-05T14:09:00.196-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:00.349-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:00.348-0500
2025-09-05T14:09:00.419-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69631
2025-09-05T14:09:00.419-0500 [INFO]  backend/local: apply calling Plan
2025-09-05T14:09:00.420-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:00.564-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:00.563-0500
2025-09-05T14:09:00.629-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_req_id=56fef6b9-ad15-dfee-0e40-b24278294b4e tf_rpc=ConfigureProvider timestamp=2025-09-05T14:09:00.629-0500
2025-09-05T14:09:01.328-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=56fef6b9-ad15-dfee-0e40-b24278294b4e @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-05T14:09:01.328-0500
2025-09-05T14:09:02.022-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})}) nor prior value cty.SetValEmpty(cty.Object(map[string]cty.Type{"cidr_blocks":cty.List(cty.String), "description":cty.String, "from_port":cty.Number, "ipv6_cidr_blocks":cty.List(cty.String), "prefix_list_ids":cty.List(cty.String), "protocol":cty.String, "security_groups":cty.Set(cty.String), "self":cty.Bool, "to_port":cty.Number}))
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-05T14:09:02.036-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69634
2025-09-05T14:09:02.165-0500 [INFO]  backend/local: apply calling Apply
2025-09-05T14:09:02.167-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:02.409-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:02.408-0500
2025-09-05T14:09:02.479-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=2731385d-9edb-b731-62c9-3db3f28e529f tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-05T14:09:02.479-0500
2025-09-05T14:09:03.104-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_req_id=2731385d-9edb-b731-62c9-3db3f28e529f tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-05T14:09:03.104-0500
2025-09-05T14:09:03.119-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})}) nor prior value cty.SetValEmpty(cty.Object(map[string]cty.Type{"cidr_blocks":cty.List(cty.String), "description":cty.String, "from_port":cty.Number, "ipv6_cidr_blocks":cty.List(cty.String), "prefix_list_ids":cty.List(cty.String), "protocol":cty.String, "security_groups":cty.Set(cty.String), "self":cty.Bool, "to_port":cty.Number}))
2025-09-05T14:09:03.123-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-05T14:09:04.700-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=69635
2025-09-05T14:09:43.395-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T14:09:43.396-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T14:09:43.396-0500 [INFO]  CLI args: []string{"terraform", "destroy"}
2025-09-05T14:09:43.397-0500 [INFO]  CLI command args: []string{"destroy"}
2025-09-05T14:09:43.836-0500 [INFO]  backend/local: starting Apply operation
2025-09-05T14:09:43.841-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:44.082-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:44.081-0500
2025-09-05T14:09:44.664-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=70077
2025-09-05T14:09:44.665-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:44.836-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:44.835-0500
2025-09-05T14:09:44.906-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=70100
2025-09-05T14:09:44.907-0500 [INFO]  backend/local: apply calling Plan
2025-09-05T14:09:44.907-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:45.065-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:45.062-0500
2025-09-05T14:09:45.136-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_req_id=9e14ed99-0f7d-4ae0-2e82-feb819cacdee timestamp=2025-09-05T14:09:45.136-0500
2025-09-05T14:09:45.768-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=9e14ed99-0f7d-4ae0-2e82-feb819cacdee timestamp=2025-09-05T14:09:45.768-0500
2025-09-05T14:09:46.556-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-05T14:09:46.565-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=70101
2025-09-05T14:09:46.567-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:46.725-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:46.724-0500
2025-09-05T14:09:46.792-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=d80b63ea-19c2-c6ea-6b9e-fd4ec476a83f tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" @module=aws.aws-base timestamp=2025-09-05T14:09:46.792-0500
2025-09-05T14:09:47.424-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_req_id=d80b63ea-19c2-c6ea-6b9e-fd4ec476a83f tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base timestamp=2025-09-05T14:09:47.424-0500
2025-09-05T14:09:47.448-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=70124
2025-09-05T14:09:50.340-0500 [INFO]  backend/local: apply calling Apply
2025-09-05T14:09:50.344-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T14:09:50.525-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T14:09:50.523-0500
2025-09-05T14:09:50.591-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=0f5cad85-9b98-a3b5-7096-c1d57a7a01a5 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-05T14:09:50.591-0500
2025-09-05T14:09:51.226-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=0f5cad85-9b98-a3b5-7096-c1d57a7a01a5 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-05T14:09:51.226-0500
2025-09-05T14:09:51.248-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-05T14:09:51.987-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Deleting EC2 Security Group: @caller=github.com/hashicorp/terraform-provider-aws/internal/service/ec2/vpc_security_group.go:365 @module=aws id=sg-0be1711c430dfe963 tf_req_id=f7d78d77-2700-343d-ee87-aee2a81231ac vpc_id=vpc-05443840a0b0fbc14 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_resource_type=aws_security_group tf_rpc=ApplyResourceChange timestamp=2025-09-05T14:09:51.987-0500
2025-09-05T14:09:52.914-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=70149
2025-09-05T19:36:32.428-0500 [INFO]  Terraform version: 1.13.0
2025-09-05T19:36:32.429-0500 [INFO]  Go runtime version: go1.24.5
2025-09-05T19:36:32.429-0500 [INFO]  CLI args: []string{"terraform", "validate"}
2025-09-05T19:36:32.430-0500 [INFO]  CLI command args: []string{"validate"}
2025-09-05T19:36:32.928-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T19:36:33.169-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T19:36:33.167-0500
2025-09-05T19:36:33.753-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64506
2025-09-05T19:36:33.757-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-05T19:36:33.907-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-05T19:36:33.906-0500
2025-09-05T19:36:33.989-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64509
2025-09-07T12:27:02.971-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:27:02.972-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:27:02.972-0500 [INFO]  CLI args: []string{"terraform", "validate"}
2025-09-07T12:27:02.974-0500 [INFO]  CLI command args: []string{"validate"}
2025-09-07T12:27:03.543-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:27:03.782-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:27:03.780-0500
2025-09-07T12:27:04.371-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=33095
2025-09-07T12:27:04.377-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:27:04.526-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:27:04.525-0500
2025-09-07T12:27:04.600-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=33107
2025-09-07T12:27:54.107-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:27:54.108-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:27:54.108-0500 [INFO]  CLI args: []string{"terraform", "validate"}
2025-09-07T12:27:54.108-0500 [INFO]  CLI command args: []string{"validate"}
2025-09-07T12:27:54.587-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:27:54.817-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:27:54.816-0500
2025-09-07T12:27:55.385-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=33374
2025-09-07T12:27:55.387-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:27:55.536-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:27:55.535-0500
2025-09-07T12:27:55.600-0500 [ERROR] vertex "aws_security_group.dynamicsg" error: Unsupported argument
2025-09-07T12:27:55.607-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=33387
2025-09-07T12:37:30.481-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:37:30.483-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:37:30.483-0500 [INFO]  CLI args: []string{"terraform", "fmt"}
2025-09-07T12:37:30.484-0500 [INFO]  CLI command args: []string{"fmt"}
2025-09-07T12:37:35.823-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:37:35.826-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:37:35.826-0500 [INFO]  CLI args: []string{"terraform", "validate"}
2025-09-07T12:37:35.827-0500 [INFO]  CLI command args: []string{"validate"}
2025-09-07T12:37:36.456-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:37:36.698-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:37:36.696-0500
2025-09-07T12:37:37.293-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=36448
2025-09-07T12:37:37.300-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:37:37.448-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:37:37.447-0500
2025-09-07T12:37:37.520-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=36461
2025-09-07T12:37:40.521-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:37:40.522-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:37:40.522-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T12:37:40.523-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T12:37:40.914-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T12:37:40.929-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:37:41.109-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:37:41.108-0500
2025-09-07T12:37:41.673-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=36484
2025-09-07T12:37:41.675-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:37:41.821-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:37:41.820-0500
2025-09-07T12:37:41.890-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=36497
2025-09-07T12:37:41.890-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T12:37:41.892-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:37:42.036-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:37:42.035-0500
2025-09-07T12:37:42.110-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_req_id=c0c5747c-549f-a1b7-1198-410ee5bd5bde @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-07T12:37:42.110-0500
2025-09-07T12:37:43.076-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=c0c5747c-549f-a1b7-1198-410ee5bd5bde tf_rpc=ConfigureProvider timestamp=2025-09-07T12:37:43.076-0500
2025-09-07T12:37:43.108-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
2025-09-07T12:37:44.386-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T12:37:44.390-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=36498
2025-09-07T12:37:44.391-0500 [INFO]  backend/local: plan operation completed
2025-09-07T12:47:57.102-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:47:57.104-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:47:57.104-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-07T12:47:57.106-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-07T12:47:57.669-0500 [INFO]  backend/local: starting Apply operation
2025-09-07T12:47:57.677-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:47:57.937-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:47:57.936-0500
2025-09-07T12:47:58.653-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=39583
2025-09-07T12:47:58.655-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:47:58.820-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:47:58.819-0500
2025-09-07T12:47:58.906-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=39596
2025-09-07T12:47:58.906-0500 [INFO]  backend/local: apply calling Plan
2025-09-07T12:47:58.906-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:47:59.076-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:47:59.075-0500
2025-09-07T12:47:59.239-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=07b95623-5b81-18cc-491e-4f91dd32a499 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-07T12:47:59.239-0500
2025-09-07T12:48:00.189-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=07b95623-5b81-18cc-491e-4f91dd32a499 tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-07T12:48:00.189-0500
2025-09-07T12:48:00.221-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T12:48:01.517-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T12:48:01.523-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=39601
2025-09-07T12:48:01.612-0500 [INFO]  backend/local: apply calling Apply
2025-09-07T12:48:01.614-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:48:01.805-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:48:01.804-0500
2025-09-07T12:48:01.883-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=5a158878-8d80-0c07-98be-de3df5aaabe4 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T12:48:01.883-0500
2025-09-07T12:48:02.505-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=5a158878-8d80-0c07-98be-de3df5aaabe4 timestamp=2025-09-07T12:48:02.505-0500
2025-09-07T12:48:02.521-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T12:48:02.522-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-07T12:48:02.524-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T12:48:02.526-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-07T12:48:36.766-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2025-09-07T12:48:36.799-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=39612
2025-09-07T12:52:02.536-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:52:02.542-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:52:02.542-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T12:52:02.546-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T12:52:03.080-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T12:52:03.088-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:03.326-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:03.324-0500
2025-09-07T12:52:03.900-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=40853
2025-09-07T12:52:03.901-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:04.047-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:04.046-0500
2025-09-07T12:52:04.119-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=40856
2025-09-07T12:52:04.119-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T12:52:04.121-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:04.270-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:04.268-0500
2025-09-07T12:52:04.338-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=3ca7b584-040b-9f8f-97b6-11b59908003b tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T12:52:04.338-0500
2025-09-07T12:52:05.188-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_rpc=ConfigureProvider tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=3ca7b584-040b-9f8f-97b6-11b59908003b timestamp=2025-09-07T12:52:05.188-0500
2025-09-07T12:52:05.924-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T12:52:08.610-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("07 Sep 2025 17:48 UTC"), "Name":cty.StringVal("test1222")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
2025-09-07T12:52:08.620-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=40857
2025-09-07T12:52:08.625-0500 [INFO]  backend/local: plan operation completed
2025-09-07T12:52:46.418-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:52:46.420-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:52:46.420-0500 [INFO]  CLI args: []string{"terraform", "apply", "-replace=aws_instance.app-dev"}
2025-09-07T12:52:46.421-0500 [INFO]  CLI command args: []string{"apply", "-replace=aws_instance.app-dev"}
2025-09-07T12:52:46.973-0500 [INFO]  backend/local: starting Apply operation
2025-09-07T12:52:46.982-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:47.226-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:47.224-0500
2025-09-07T12:52:47.813-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41106
2025-09-07T12:52:47.814-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:47.961-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:47.960-0500
2025-09-07T12:52:48.033-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41109
2025-09-07T12:52:48.033-0500 [INFO]  backend/local: apply calling Plan
2025-09-07T12:52:48.034-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:48.192-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:48.191-0500
2025-09-07T12:52:48.261-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_req_id=0e8e9711-0a4b-8a7e-08c4-8b88fb5d844e tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-07T12:52:48.261-0500
2025-09-07T12:52:48.912-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_req_id=0e8e9711-0a4b-8a7e-08c4-8b88fb5d844e tf_rpc=ConfigureProvider timestamp=2025-09-07T12:52:48.912-0500
2025-09-07T12:52:49.642-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T12:52:52.304-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("07 Sep 2025 17:48 UTC"), "Name":cty.StringVal("test1222")})
      - .hibernation: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2025-09-07T12:52:52.320-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41110
2025-09-07T12:52:55.094-0500 [INFO]  backend/local: apply calling Apply
2025-09-07T12:52:55.100-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:52:55.279-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:52:55.278-0500
2025-09-07T12:52:55.343-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=956850ea-d2a3-06a9-77ab-306a47bbbf7a @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-07T12:52:55.343-0500
2025-09-07T12:52:55.968-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=956850ea-d2a3-06a9-77ab-306a47bbbf7a tf_rpc=ConfigureProvider @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T12:52:55.968-0500
2025-09-07T12:52:55.988-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-07T12:53:27.040-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T12:53:27.040-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-07T12:54:00.987-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2025-09-07T12:54:01.011-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41158
2025-09-07T12:54:45.447-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T12:54:45.448-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T12:54:45.448-0500 [INFO]  CLI args: []string{"terraform", "destroy"}
2025-09-07T12:54:45.449-0500 [INFO]  CLI command args: []string{"destroy"}
2025-09-07T12:54:45.904-0500 [INFO]  backend/local: starting Apply operation
2025-09-07T12:54:45.911-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:54:46.179-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:54:46.178-0500
2025-09-07T12:54:46.890-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41744
2025-09-07T12:54:46.891-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:54:47.071-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:54:47.069-0500
2025-09-07T12:54:47.147-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41757
2025-09-07T12:54:47.147-0500 [INFO]  backend/local: apply calling Plan
2025-09-07T12:54:47.148-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:54:47.301-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:54:47.301-0500
2025-09-07T12:54:47.376-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=45da6742-b4cd-053d-e90b-1294bc1d28a4 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" timestamp=2025-09-07T12:54:47.375-0500
2025-09-07T12:54:48.364-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=45da6742-b4cd-053d-e90b-1294bc1d28a4 tf_rpc=ConfigureProvider timestamp=2025-09-07T12:54:48.364-0500
2025-09-07T12:54:49.104-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T12:54:51.617-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("07 Sep 2025 17:53 UTC"), "Name":cty.StringVal("test1")})
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
2025-09-07T12:54:51.625-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41758
2025-09-07T12:54:51.629-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:54:51.795-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:54:51.794-0500
2025-09-07T12:54:51.863-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base tf_req_id=1d8ca922-a6c9-0143-cfad-ce204dd5b728 timestamp=2025-09-07T12:54:51.863-0500
2025-09-07T12:54:52.549-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=1d8ca922-a6c9-0143-cfad-ce204dd5b728 tf_rpc=ConfigureProvider @module=aws.aws-base timestamp=2025-09-07T12:54:52.549-0500
2025-09-07T12:54:52.572-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41785
2025-09-07T12:54:54.504-0500 [INFO]  backend/local: apply calling Apply
2025-09-07T12:54:54.507-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T12:54:54.688-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T12:54:54.687-0500
2025-09-07T12:54:54.762-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=f2304030-1ecb-ca06-77cb-efedb4acbf66 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-07T12:54:54.762-0500
2025-09-07T12:54:55.401-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=f2304030-1ecb-ca06-77cb-efedb4acbf66 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-07T12:54:55.401-0500
2025-09-07T12:54:55.414-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-07T12:54:55.415-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-07T12:54:56.118-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Deleting EC2 Security Group: @module=aws tf_req_id=87397ed1-66df-f58d-d276-63a00be6bdaa tf_resource_type=aws_security_group id=sg-0e20bd6f4feeeaecd tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ApplyResourceChange vpc_id=vpc-05443840a0b0fbc14 @caller=github.com/hashicorp/terraform-provider-aws/internal/service/ec2/vpc_security_group.go:365 timestamp=2025-09-07T12:54:56.118-0500
2025-09-07T12:55:26.434-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=41796
2025-09-07T13:02:06.482-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:02:06.483-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:02:06.483-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T13:02:06.483-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T13:02:07.034-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T13:02:07.046-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:07.290-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:07.289-0500
2025-09-07T13:02:07.961-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44049
2025-09-07T13:02:07.962-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:08.114-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:08.113-0500
2025-09-07T13:02:08.192-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44062
2025-09-07T13:02:08.192-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T13:02:08.193-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:08.355-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:08.353-0500
2025-09-07T13:02:08.425-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_req_id=2ffbc199-5c8a-6ac1-4bfc-ef1a01261c15 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T13:02:08.425-0500
2025-09-07T13:02:09.391-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=2ffbc199-5c8a-6ac1-4bfc-ef1a01261c15 tf_rpc=ConfigureProvider @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T13:02:09.391-0500
2025-09-07T13:02:09.406-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:09.406-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:09.406-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:09.414-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T13:02:10.618-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44069
2025-09-07T13:02:10.620-0500 [INFO]  backend/local: plan operation completed
2025-09-07T13:02:41.651-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:02:41.651-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:02:41.651-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-07T13:02:41.652-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-07T13:02:42.224-0500 [INFO]  backend/local: starting Apply operation
2025-09-07T13:02:42.230-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:42.466-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:42.465-0500
2025-09-07T13:02:43.053-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44277
2025-09-07T13:02:43.054-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:43.199-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:43.198-0500
2025-09-07T13:02:43.287-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44290
2025-09-07T13:02:43.287-0500 [INFO]  backend/local: apply calling Plan
2025-09-07T13:02:43.288-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:43.447-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:43.446-0500
2025-09-07T13:02:43.520-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=64e6e0cd-c042-1bd9-7fc4-4609a3128be1 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-07T13:02:43.520-0500
2025-09-07T13:02:44.147-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=64e6e0cd-c042-1bd9-7fc4-4609a3128be1 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T13:02:44.147-0500
2025-09-07T13:02:44.164-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:44.164-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:44.164-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:44.172-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T13:02:45.185-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44291
2025-09-07T13:02:45.271-0500 [INFO]  backend/local: apply calling Apply
2025-09-07T13:02:45.273-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:02:45.439-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:02:45.438-0500
2025-09-07T13:02:45.507-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_req_id=8406d9b7-78cb-a5b0-c792-d33c8f670339 tf_rpc=ConfigureProvider tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base timestamp=2025-09-07T13:02:45.507-0500
2025-09-07T13:02:46.189-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=8406d9b7-78cb-a5b0-c792-d33c8f670339 tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-07T13:02:46.189-0500
2025-09-07T13:02:46.204-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:46.204-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:46.204-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:02:46.205-0500 [INFO]  Starting apply for aws_iam_user.lb[2]
2025-09-07T13:02:46.205-0500 [INFO]  Starting apply for aws_iam_user.lb[1]
2025-09-07T13:02:46.205-0500 [INFO]  Starting apply for aws_iam_user.lb[0]
2025-09-07T13:02:46.220-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.dynamicsg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .ingress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("tcp"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(9500)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(8201), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(8201)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(83), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(83)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9200), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9200)}), cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(9500), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("tcp"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(9500)})})
2025-09-07T13:02:46.222-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-07T13:02:47.082-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: was null, but now cty.StringVal("")
2025-09-07T13:02:47.084-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: was null, but now cty.StringVal("")
2025-09-07T13:02:47.086-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: was null, but now cty.StringVal("")
2025-09-07T13:02:50.383-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=44308
2025-09-07T13:22:12.320-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:22:12.322-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:22:12.322-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T13:22:12.323-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T13:22:12.867-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T13:22:12.885-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:22:13.130-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:22:13.129-0500
2025-09-07T13:22:13.742-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=50674
2025-09-07T13:22:13.743-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:22:13.901-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:22:13.900-0500
2025-09-07T13:22:14.043-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=50681
2025-09-07T13:22:14.043-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T13:22:14.045-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:22:14.207-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:22:14.206-0500
2025-09-07T13:22:14.277-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=f7b5b929-39c2-d0f8-cfed-4875de64e140 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-07T13:22:14.277-0500
2025-09-07T13:22:15.152-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=f7b5b929-39c2-d0f8-cfed-4875de64e140 tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-07T13:22:15.152-0500
2025-09-07T13:22:15.175-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T13:22:15.176-0500 [ERROR] vertex "aws_vpc_security_group_ingress_rule.example" error: Incorrect attribute value type
2025-09-07T13:22:15.176-0500 [ERROR] vertex "aws_vpc_security_group_ingress_rule.example" error: Invalid template interpolation value
2025-09-07T13:22:15.176-0500 [ERROR] vertex "aws_vpc_security_group_ingress_rule.example (expand)" error: Incorrect attribute value type
2025-09-07T13:22:15.176-0500 [ERROR] vertex "aws_vpc_security_group_ingress_rule.example (expand)" error: Invalid template interpolation value
2025-09-07T13:22:15.647-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-07T13:22:15.654-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:22:15.663-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:22:16.404-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T13:22:16.409-0500 [WARN]  Planning encountered errors, so plan is not applyable
2025-09-07T13:22:16.409-0500 [INFO]  backend/local: plan operation completed
2025-09-07T13:22:16.497-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=50684
2025-09-07T13:23:13.176-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:23:13.177-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:23:13.177-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T13:23:13.177-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T13:23:13.594-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T13:23:13.601-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:23:13.797-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:23:13.795-0500
2025-09-07T13:23:14.377-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51011
2025-09-07T13:23:14.378-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:23:14.528-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:23:14.526-0500
2025-09-07T13:23:14.598-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51024
2025-09-07T13:23:14.598-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T13:23:14.599-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:23:14.745-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:23:14.743-0500
2025-09-07T13:23:14.813-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=89ca8269-ebfe-f45b-4903-17542dc2dbd1 tf_rpc=ConfigureProvider timestamp=2025-09-07T13:23:14.813-0500
2025-09-07T13:23:15.452-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=89ca8269-ebfe-f45b-4903-17542dc2dbd1 tf_rpc=ConfigureProvider timestamp=2025-09-07T13:23:15.452-0500
2025-09-07T13:23:15.473-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T13:23:15.474-0500 [ERROR] vertex "aws_vpc_security_group_ingress_rule.example" error: Invalid template interpolation value
2025-09-07T13:23:15.474-0500 [ERROR] vertex "aws_vpc_security_group_ingress_rule.example (expand)" error: Invalid template interpolation value
2025-09-07T13:23:15.884-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:23:15.884-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:23:15.899-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:23:16.491-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T13:23:16.496-0500 [WARN]  Planning encountered errors, so plan is not applyable
2025-09-07T13:23:16.497-0500 [INFO]  backend/local: plan operation completed
2025-09-07T13:23:16.593-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51025
2025-09-07T13:23:39.805-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:23:39.806-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:23:39.806-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T13:23:39.807-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T13:23:40.293-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T13:23:40.301-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:23:40.495-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:23:40.494-0500
2025-09-07T13:23:41.069-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51180
2025-09-07T13:23:41.071-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:23:41.214-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:23:41.213-0500
2025-09-07T13:23:41.285-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51194
2025-09-07T13:23:41.285-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T13:23:41.286-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:23:41.432-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:23:41.430-0500
2025-09-07T13:23:41.499-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=6ade6153-0072-2863-6986-9fbd8f3cdda8 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-07T13:23:41.499-0500
2025-09-07T13:23:42.353-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @module=aws.aws-base tf_req_id=6ade6153-0072-2863-6986-9fbd8f3cdda8 timestamp=2025-09-07T13:23:42.344-0500
2025-09-07T13:23:42.367-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-07T13:23:42.956-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:23:42.958-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:23:42.959-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:23:43.420-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T13:23:43.428-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51195
2025-09-07T13:23:43.434-0500 [INFO]  backend/local: plan operation completed
2025-09-07T13:23:47.399-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:23:47.400-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:23:47.400-0500 [INFO]  CLI args: []string{"terraform", "fmt"}
2025-09-07T13:23:47.400-0500 [INFO]  CLI command args: []string{"fmt"}
2025-09-07T13:24:22.743-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:24:22.744-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:24:22.744-0500 [INFO]  CLI args: []string{"terraform", "graph"}
2025-09-07T13:24:22.744-0500 [INFO]  CLI command args: []string{"graph"}
2025-09-07T13:24:23.254-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:24:23.474-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:24:23.472-0500
2025-09-07T13:24:24.041-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=51440
2025-09-07T13:57:32.378-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:57:32.378-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:57:32.378-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-07T13:57:32.379-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-07T13:57:32.915-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T13:57:32.925-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:57:33.161-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:57:33.160-0500
2025-09-07T13:57:33.741-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=61634
2025-09-07T13:57:33.742-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:57:33.892-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:57:33.891-0500
2025-09-07T13:57:33.964-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=61638
2025-09-07T13:57:33.964-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T13:57:33.965-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:57:34.130-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:57:34.130-0500
2025-09-07T13:57:34.200-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=b8da2055-ccc3-cbcb-3e7e-bc3214ca91b5 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" timestamp=2025-09-07T13:57:34.200-0500
2025-09-07T13:57:34.944-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=b8da2055-ccc3-cbcb-3e7e-bc3214ca91b5 @module=aws.aws-base tf_rpc=ConfigureProvider timestamp=2025-09-07T13:57:34.944-0500
2025-09-07T13:57:34.966-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-07T13:57:35.555-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:57:35.564-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:57:35.564-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-07T13:57:36.030-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T13:57:36.044-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=61639
2025-09-07T13:57:36.049-0500 [INFO]  backend/local: plan operation completed
2025-09-07T13:59:33.535-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T13:59:33.536-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T13:59:33.536-0500 [INFO]  CLI args: []string{"terraform", "plan", "-out", "infra.plan"}
2025-09-07T13:59:33.537-0500 [INFO]  CLI command args: []string{"plan", "-out", "infra.plan"}
2025-09-07T13:59:34.098-0500 [INFO]  backend/local: starting Plan operation
2025-09-07T13:59:34.107-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:59:34.343-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:59:34.342-0500
2025-09-07T13:59:34.910-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=62253
2025-09-07T13:59:34.911-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:59:35.055-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:59:35.054-0500
2025-09-07T13:59:35.126-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=62264
2025-09-07T13:59:35.127-0500 [INFO]  backend/local: plan calling Plan
2025-09-07T13:59:35.128-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T13:59:35.278-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T13:59:35.277-0500
2025-09-07T13:59:35.351-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_req_id=add95e9d-9065-c98e-472f-655bf5ecb281 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T13:59:35.351-0500
2025-09-07T13:59:36.166-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_req_id=add95e9d-9065-c98e-472f-655bf5ecb281 tf_rpc=ConfigureProvider @module=aws.aws-base @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-07T13:59:36.166-0500
2025-09-07T13:59:36.195-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-07T13:59:36.696-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:59:36.696-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:59:36.702-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-07T13:59:37.221-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-07T13:59:37.229-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=62267
2025-09-07T13:59:37.236-0500 [INFO]  backend/local: plan operation completed
2025-09-07T13:59:37.236-0500 [INFO]  backend/local: writing plan output to: infra.plan
2025-09-07T14:03:00.393-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T14:03:00.393-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T14:03:00.393-0500 [INFO]  CLI args: []string{"terraform", "show", "infra.plan"}
2025-09-07T14:03:00.394-0500 [INFO]  CLI command args: []string{"show", "infra.plan"}
2025-09-07T14:03:00.959-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T14:03:01.198-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T14:03:01.197-0500
2025-09-07T14:03:01.774-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63382
2025-09-07T14:04:11.092-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T14:04:11.094-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T14:04:11.094-0500 [INFO]  CLI args: []string{"terraform", "show", "-json", "infra.plan"}
2025-09-07T14:04:11.094-0500 [INFO]  CLI command args: []string{"show", "-json", "infra.plan"}
2025-09-07T14:04:11.648-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T14:04:11.917-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T14:04:11.917-0500
2025-09-07T14:04:12.499-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63878
2025-09-07T14:07:04.096-0500 [INFO]  Terraform version: 1.13.0
2025-09-07T14:07:04.097-0500 [INFO]  Go runtime version: go1.24.5
2025-09-07T14:07:04.097-0500 [INFO]  CLI args: []string{"terraform", "show", "-json", "infra.plan"}
2025-09-07T14:07:04.098-0500 [INFO]  CLI command args: []string{"show", "-json", "infra.plan"}
2025-09-07T14:07:04.637-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-07T14:07:04.875-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-07T14:07:04.874-0500
2025-09-07T14:07:05.476-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64792
2025-09-08T10:01:40.665-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T10:01:40.667-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T10:01:40.667-0500 [INFO]  CLI args: []string{"terraform", "output", "arns"}
2025-09-08T10:01:40.668-0500 [INFO]  CLI command args: []string{"output", "arns"}
2025-09-08T10:12:30.452-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T10:12:30.454-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T10:12:30.454-0500 [INFO]  CLI args: []string{"terraform", "version"}
2025-09-08T10:12:30.455-0500 [INFO]  CLI command args: []string{"version"}
2025-09-08T10:13:30.727-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T10:13:30.727-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T10:13:30.727-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T10:13:30.728-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T10:13:31.273-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T10:13:31.285-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T10:13:31.530-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T10:13:31.529-0500
2025-09-08T10:13:32.144-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=3714
2025-09-08T10:13:50.315-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T10:13:50.316-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T10:13:50.316-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T10:13:50.316-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T10:13:50.826-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T10:13:50.832-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T10:13:51.037-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T10:13:51.036-0500
2025-09-08T10:13:51.625-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=3833
2025-09-08T10:13:51.632-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T10:13:51.791-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T10:13:51.790-0500
2025-09-08T10:13:51.873-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=3836
2025-09-08T10:13:51.873-0500 [INFO]  backend/local: plan calling Plan
2025-09-08T10:13:51.875-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T10:13:52.022-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T10:13:52.020-0500
2025-09-08T10:13:52.092-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=27b0d9a4-5301-1794-f996-befa94952d75 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @module=aws.aws-base timestamp=2025-09-08T10:13:52.092-0500
2025-09-08T10:13:52.980-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_req_id=27b0d9a4-5301-1794-f996-befa94952d75 tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-08T10:13:52.980-0500
2025-09-08T10:13:53.003-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T10:13:53.457-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T10:13:53.457-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T10:13:53.465-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T10:13:54.076-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T10:13:54.082-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=3847
2025-09-08T10:13:54.088-0500 [INFO]  backend/local: plan operation completed
2025-09-08T10:15:08.061-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T10:15:08.062-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T10:15:08.062-0500 [INFO]  CLI args: []string{"terraform", "version"}
2025-09-08T10:15:08.063-0500 [INFO]  CLI command args: []string{"version"}
2025-09-08T16:01:54.870-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T16:01:54.872-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T16:01:54.872-0500 [INFO]  CLI args: []string{"terraform", "console"}
2025-09-08T16:01:54.873-0500 [INFO]  CLI command args: []string{"console"}
2025-09-08T16:01:55.490-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:01:55.872-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:01:55.867-0500
2025-09-08T16:01:56.454-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=11815
2025-09-08T16:01:56.459-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:01:56.620-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:01:56.619-0500
2025-09-08T16:01:56.633-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=11823
2025-09-08T16:06:26.114-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T16:06:26.115-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T16:06:26.115-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T16:06:26.116-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T16:06:26.672-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T16:06:26.679-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:06:26.914-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:06:26.913-0500
2025-09-08T16:06:27.493-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=13301
2025-09-08T16:06:27.496-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:06:27.640-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:06:27.639-0500
2025-09-08T16:06:27.715-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=13302
2025-09-08T16:06:27.715-0500 [INFO]  backend/local: plan calling Plan
2025-09-08T16:06:27.718-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:06:27.861-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:06:27.860-0500
2025-09-08T16:06:27.937-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=96696e1a-8c93-6a5a-89d7-4a422f5ed36d @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-08T16:06:27.936-0500
2025-09-08T16:06:28.831-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_req_id=96696e1a-8c93-6a5a-89d7-4a422f5ed36d tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T16:06:28.831-0500
2025-09-08T16:06:28.857-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T16:06:29.369-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T16:06:29.369-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T16:06:29.372-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T16:06:29.906-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T16:06:29.920-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=13303
2025-09-08T16:06:29.926-0500 [INFO]  backend/local: plan operation completed
2025-09-08T16:08:44.225-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T16:08:44.226-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T16:08:44.226-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-08T16:08:44.226-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-08T16:08:44.777-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T16:08:44.784-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:08:45.018-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:08:45.017-0500
2025-09-08T16:08:45.594-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14067
2025-09-08T16:08:45.595-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:08:45.736-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:08:45.735-0500
2025-09-08T16:08:45.815-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14080
2025-09-08T16:08:45.815-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T16:08:45.816-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:08:45.972-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:08:45.972-0500
2025-09-08T16:08:46.043-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=891755f8-559a-87be-8473-d66dbcc121e8 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-08T16:08:46.043-0500
2025-09-08T16:08:47.095-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_req_id=891755f8-559a-87be-8473-d66dbcc121e8 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-08T16:08:47.095-0500
2025-09-08T16:08:47.117-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-08T16:08:47.592-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T16:08:47.592-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T16:08:47.595-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T16:08:48.363-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T16:08:48.376-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14084
2025-09-08T16:08:48.461-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T16:08:48.463-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:08:48.609-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:08:48.608-0500
2025-09-08T16:08:48.676-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=e225083a-e8e4-e2a9-7f37-d48c2ed19f38 timestamp=2025-09-08T16:08:48.676-0500
2025-09-08T16:08:49.330-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_req_id=e225083a-e8e4-e2a9-7f37-d48c2ed19f38 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base timestamp=2025-09-08T16:08:49.330-0500
2025-09-08T16:08:49.346-0500 [INFO]  Starting apply for aws_security_group.dynamicsg
2025-09-08T16:08:49.347-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-08T16:08:49.348-0500 [INFO]  Starting apply for aws_security_group.sg_main
2025-09-08T16:08:49.348-0500 [INFO]  Starting apply for aws_eip.name
2025-09-08T16:08:49.351-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T16:08:49.351-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T16:08:50.026-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Deleting EC2 Security Group: tf_rpc=ApplyResourceChange vpc_id=vpc-05443840a0b0fbc14 id=sg-0c3612f075fdd0b0d tf_provider_addr=registry.terraform.io/hashicorp/aws tf_resource_type=aws_security_group @caller=github.com/hashicorp/terraform-provider-aws/internal/service/ec2/vpc_security_group.go:365 @module=aws tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=b4cfc9bf-f9d5-5c08-1a88-908259452e25 timestamp=2025-09-08T16:08:50.026-0500
2025-09-08T16:08:51.024-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .customer_owned_ipv4_pool: was null, but now cty.StringVal("")
2025-09-08T16:08:52.843-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.webingress
2025-09-08T16:08:52.843-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.example
2025-09-08T16:09:23.895-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2025-09-08T16:09:23.914-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14116
2025-09-08T16:10:11.503-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T16:10:11.504-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T16:10:11.504-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-08T16:10:11.505-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-08T16:10:12.002-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T16:10:12.011-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:10:12.253-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:10:12.252-0500
2025-09-08T16:10:12.852-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14589
2025-09-08T16:10:12.853-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:10:13.000-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:10:12.999-0500
2025-09-08T16:10:13.071-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14592
2025-09-08T16:10:13.071-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T16:10:13.072-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:10:13.220-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:10:13.218-0500
2025-09-08T16:10:13.287-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=ec461b82-cd99-eb9c-2ce1-3721be6351f8 tf_rpc=ConfigureProvider tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T16:10:13.287-0500
2025-09-08T16:10:14.202-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=ec461b82-cd99-eb9c-2ce1-3721be6351f8 timestamp=2025-09-08T16:10:14.201-0500
2025-09-08T16:10:14.687-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T16:10:14.688-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T16:10:14.692-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T16:10:14.975-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T16:10:15.246-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T16:10:17.968-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 21:08 UTC"), "Name":cty.StringVal("test1")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
2025-09-08T16:10:17.978-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14593
2025-09-08T16:10:18.067-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T16:10:18.069-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T16:10:18.218-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T16:10:18.216-0500
2025-09-08T16:10:18.285-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=ee2e795f-bb87-7c87-83fe-5825692e90c3 tf_rpc=ConfigureProvider tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base timestamp=2025-09-08T16:10:18.285-0500
2025-09-08T16:10:18.909-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=ee2e795f-bb87-7c87-83fe-5825692e90c3 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base timestamp=2025-09-08T16:10:18.909-0500
2025-09-08T16:10:18.937-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
2025-09-08T16:10:18.938-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T16:10:22.335-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=14630
2025-09-08T17:51:35.198-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T17:51:35.199-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T17:51:35.199-0500 [INFO]  CLI args: []string{"terraform", "apply", "destroy"}
2025-09-08T17:51:35.201-0500 [INFO]  CLI command args: []string{"apply", "destroy"}
2025-09-08T17:51:40.373-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T17:51:40.374-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T17:51:40.374-0500 [INFO]  CLI args: []string{"terraform", "destroy"}
2025-09-08T17:51:40.375-0500 [INFO]  CLI command args: []string{"destroy"}
2025-09-08T17:51:40.936-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T17:51:40.949-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T17:51:41.200-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T17:51:41.199-0500
2025-09-08T17:51:41.794-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=45494
2025-09-08T17:51:41.800-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T17:51:41.945-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T17:51:41.944-0500
2025-09-08T17:51:42.018-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=45507
2025-09-08T17:51:42.018-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T17:51:42.019-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T17:51:42.180-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T17:51:42.178-0500
2025-09-08T17:51:42.254-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_req_id=3d9c991e-3225-e723-cfe5-17ee4327e09d tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T17:51:42.254-0500
2025-09-08T17:51:43.065-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_req_id=3d9c991e-3225-e723-cfe5-17ee4327e09d @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base timestamp=2025-09-08T17:51:43.065-0500
2025-09-08T17:51:43.558-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T17:51:43.558-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T17:51:43.578-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T17:51:43.989-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-08T17:51:44.225-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T17:51:46.986-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 21:10 UTC"), "Name":cty.StringVal("test1")})
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
2025-09-08T17:51:46.997-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=45508
2025-09-08T17:51:47.002-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T17:51:47.161-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T17:51:47.159-0500
2025-09-08T17:51:47.227-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_req_id=b24c27c2-6b63-6a02-21fc-c83a4f828cf0 timestamp=2025-09-08T17:51:47.227-0500
2025-09-08T17:51:47.852-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=b24c27c2-6b63-6a02-21fc-c83a4f828cf0 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T17:51:47.852-0500
2025-09-08T17:51:47.886-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=45539
2025-09-08T17:51:50.439-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T17:51:50.447-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T17:51:50.633-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T17:51:50.632-0500
2025-09-08T17:51:50.701-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=c9510cc4-f307-f302-3d01-f805234f1f20 timestamp=2025-09-08T17:51:50.701-0500
2025-09-08T17:51:51.335-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base tf_req_id=c9510cc4-f307-f302-3d01-f805234f1f20 timestamp=2025-09-08T17:51:51.335-0500
2025-09-08T17:51:51.351-0500 [INFO]  Starting apply for aws_iam_user.lb[0]
2025-09-08T17:51:51.352-0500 [INFO]  Starting apply for aws_iam_user.lb[2]
2025-09-08T17:51:51.352-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.example
2025-09-08T17:51:51.352-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.webingress
2025-09-08T17:51:51.352-0500 [INFO]  Starting apply for aws_iam_user.lb[1]
2025-09-08T17:51:51.353-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T17:51:52.287-0500 [INFO]  Starting apply for aws_eip.name
2025-09-08T17:51:52.287-0500 [INFO]  Starting apply for aws_security_group.sg_main
2025-09-08T17:51:52.289-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: [INFO] Deleting EC2 EIP: eipalloc-06e8e3e315a4aa927
2025-09-08T17:51:52.503-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Deleting EC2 Security Group: @caller=github.com/hashicorp/terraform-provider-aws/internal/service/ec2/vpc_security_group.go:365 @module=aws id=sg-0803203967b2d8ff8 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=6a725512-1584-c039-ded9-be8d2aab2a67 vpc_id=vpc-05443840a0b0fbc14 tf_resource_type=aws_security_group tf_rpc=ApplyResourceChange timestamp=2025-09-08T17:51:52.503-0500
2025-09-08T17:52:42.846-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=45569
2025-09-08T18:50:16.638-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T18:50:16.640-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T18:50:16.640-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-08T18:50:16.642-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-08T18:50:17.208-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T18:50:17.220-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:50:17.573-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:50:17.572-0500
2025-09-08T18:50:18.189-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63296
2025-09-08T18:50:18.195-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:50:18.365-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:50:18.364-0500
2025-09-08T18:50:18.464-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63299
2025-09-08T18:50:18.464-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T18:50:18.466-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:50:18.617-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:50:18.616-0500
2025-09-08T18:50:18.690-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=462d182f-fdf1-4442-302c-9bb8402d49d9 tf_rpc=ConfigureProvider timestamp=2025-09-08T18:50:18.690-0500
2025-09-08T18:50:19.491-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=462d182f-fdf1-4442-302c-9bb8402d49d9 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider timestamp=2025-09-08T18:50:19.491-0500
2025-09-08T18:50:19.508-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:50:19.508-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:50:19.508-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:50:19.509-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-08T18:50:20.627-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1")})
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T18:50:20.632-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63314
2025-09-08T18:50:20.715-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T18:50:20.717-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:50:20.882-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:50:20.881-0500
2025-09-08T18:50:20.959-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=afed6a44-f446-0c33-e281-d5744238ad7c timestamp=2025-09-08T18:50:20.959-0500
2025-09-08T18:50:21.595-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=afed6a44-f446-0c33-e281-d5744238ad7c @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base timestamp=2025-09-08T18:50:21.595-0500
2025-09-08T18:50:21.617-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:50:21.617-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:50:21.617-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:50:21.617-0500 [INFO]  Starting apply for aws_iam_user.lb[1]
2025-09-08T18:50:21.617-0500 [INFO]  Starting apply for aws_eip.name
2025-09-08T18:50:21.617-0500 [INFO]  Starting apply for aws_iam_user.lb[2]
2025-09-08T18:50:21.618-0500 [INFO]  Starting apply for aws_iam_user.lb[0]
2025-09-08T18:50:21.619-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T18:50:21.619-0500 [INFO]  Starting apply for aws_security_group.sg_main
2025-09-08T18:50:21.622-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T18:50:21.623-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T18:50:22.344-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: was null, but now cty.StringVal("")
2025-09-08T18:50:22.344-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: was null, but now cty.StringVal("")
2025-09-08T18:50:22.354-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: was null, but now cty.StringVal("")
2025-09-08T18:50:23.189-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .customer_owned_ipv4_pool: was null, but now cty.StringVal("")
2025-09-08T18:50:24.879-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.webingress
2025-09-08T18:50:24.879-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.example
2025-09-08T18:50:56.024-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2025-09-08T18:50:56.064-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63327
2025-09-08T18:52:21.686-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T18:52:21.687-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T18:52:21.687-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T18:52:21.687-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T18:52:22.251-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T18:52:22.258-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:22.498-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:22.497-0500
2025-09-08T18:52:23.097-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=63995
2025-09-08T18:52:23.102-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:23.253-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:23.252-0500
2025-09-08T18:52:23.327-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64008
2025-09-08T18:52:23.327-0500 [INFO]  backend/local: plan calling Plan
2025-09-08T18:52:23.330-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:23.487-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:23.486-0500
2025-09-08T18:52:23.556-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=dcfba4bb-65b8-c307-a8f0-edf4c836bd8d timestamp=2025-09-08T18:52:23.556-0500
2025-09-08T18:52:24.238-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_req_id=dcfba4bb-65b8-c307-a8f0-edf4c836bd8d tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-08T18:52:24.238-0500
2025-09-08T18:52:24.820-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:52:24.820-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:52:24.825-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:52:25.166-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T18:52:25.371-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:52:28.037-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1Earth")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 23:50 UTC"), "Name":cty.StringVal("test1")})
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
2025-09-08T18:52:28.048-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64009
2025-09-08T18:52:28.051-0500 [INFO]  backend/local: plan operation completed
2025-09-08T18:52:40.633-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T18:52:40.634-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T18:52:40.634-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-08T18:52:40.634-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-08T18:52:41.087-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T18:52:41.103-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:41.290-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:41.288-0500
2025-09-08T18:52:41.868-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64111
2025-09-08T18:52:41.869-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:42.016-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:42.015-0500
2025-09-08T18:52:42.088-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64125
2025-09-08T18:52:42.088-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T18:52:42.089-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:42.236-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:42.235-0500
2025-09-08T18:52:42.309-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=b06b0a09-5ae7-5935-1b05-9b987657892c tf_rpc=ConfigureProvider @module=aws.aws-base timestamp=2025-09-08T18:52:42.309-0500
2025-09-08T18:52:42.990-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=b06b0a09-5ae7-5935-1b05-9b987657892c tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-08T18:52:42.990-0500
2025-09-08T18:52:43.414-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:52:43.414-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:52:43.420-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:52:43.653-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:52:43.886-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:52:46.479-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1Earth")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 23:50 UTC"), "Name":cty.StringVal("test1")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2025-09-08T18:52:46.502-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64130
2025-09-08T18:52:46.579-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T18:52:46.581-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:52:46.732-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:52:46.731-0500
2025-09-08T18:52:46.800-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=22dba2e3-c0e3-9e9b-49d0-7bb23c469eab tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-08T18:52:46.800-0500
2025-09-08T18:52:47.448-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=22dba2e3-c0e3-9e9b-49d0-7bb23c469eab tf_rpc=ConfigureProvider @module=aws.aws-base @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-08T18:52:47.448-0500
2025-09-08T18:52:47.482-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
2025-09-08T18:52:47.483-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T18:52:50.709-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=64157
2025-09-08T18:55:33.116-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T18:55:33.117-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T18:55:33.117-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T18:55:33.117-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T18:55:33.677-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T18:55:33.686-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:55:33.934-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:55:33.933-0500
2025-09-08T18:55:34.650-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65073
2025-09-08T18:55:34.656-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:55:34.806-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:55:34.805-0500
2025-09-08T18:55:34.881-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65076
2025-09-08T18:55:34.881-0500 [INFO]  backend/local: plan calling Plan
2025-09-08T18:55:34.882-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:55:35.032-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:55:35.030-0500
2025-09-08T18:55:35.102-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=eb7c1b0f-f0e0-21d8-25b5-2883a43bf84a timestamp=2025-09-08T18:55:35.102-0500
2025-09-08T18:55:36.023-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=eb7c1b0f-f0e0-21d8-25b5-2883a43bf84a tf_rpc=ConfigureProvider @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T18:55:36.023-0500
2025-09-08T18:55:36.634-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:55:36.634-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:55:36.648-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:55:36.781-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:55:37.026-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:55:39.242-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1Earth")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 23:52 UTC"), "Name":cty.StringVal("test1Earth")})
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
2025-09-08T18:55:39.260-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65077
2025-09-08T18:55:39.263-0500 [INFO]  backend/local: plan operation completed
2025-09-08T18:57:22.226-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T18:57:22.227-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T18:57:22.227-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T18:57:22.228-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T18:57:22.782-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T18:57:22.801-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:57:23.035-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:57:23.034-0500
2025-09-08T18:57:23.615-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65653
2025-09-08T18:57:23.617-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:57:23.762-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:57:23.760-0500
2025-09-08T18:57:23.840-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65666
2025-09-08T18:57:23.840-0500 [INFO]  backend/local: plan calling Plan
2025-09-08T18:57:23.841-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:57:24.004-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:57:24.003-0500
2025-09-08T18:57:24.099-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=0abb8770-15e0-03ec-e675-88a01dbaaca7 timestamp=2025-09-08T18:57:24.099-0500
2025-09-08T18:57:24.877-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_req_id=0abb8770-15e0-03ec-e675-88a01dbaaca7 timestamp=2025-09-08T18:57:24.877-0500
2025-09-08T18:57:25.393-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:57:25.394-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:57:25.407-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:57:25.815-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:57:26.037-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:57:27.912-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1Earth")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 23:52 UTC"), "Name":cty.StringVal("test1Earth"), "PlanT":cty.StringVal("zealzora")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
2025-09-08T18:57:27.926-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65667
2025-09-08T18:57:27.930-0500 [INFO]  backend/local: plan operation completed
2025-09-08T18:57:54.956-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T18:57:54.965-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T18:57:54.965-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-08T18:57:54.970-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-08T18:57:55.568-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T18:57:55.577-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:57:55.821-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:57:55.819-0500
2025-09-08T18:57:56.397-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65904
2025-09-08T18:57:56.398-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:57:56.545-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:57:56.543-0500
2025-09-08T18:57:56.620-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65907
2025-09-08T18:57:56.620-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T18:57:56.621-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:57:56.775-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:57:56.774-0500
2025-09-08T18:57:56.847-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=3ca44a80-af6d-aebd-b54a-154f29b5eb68 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_rpc=ConfigureProvider timestamp=2025-09-08T18:57:56.847-0500
2025-09-08T18:57:57.490-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=3ca44a80-af6d-aebd-b54a-154f29b5eb68 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider timestamp=2025-09-08T18:57:57.490-0500
2025-09-08T18:57:57.932-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:57:57.932-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T18:57:57.932-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T18:57:58.176-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
2025-09-08T18:57:58.410-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T18:58:00.394-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1Earth")}) nor prior value cty.MapVal(map[string]cty.Value{"CreationDate":cty.StringVal("08 Sep 2025 23:52 UTC"), "Name":cty.StringVal("test1Earth"), "PlanT":cty.StringVal("zealzora")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
2025-09-08T18:58:00.411-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65908
2025-09-08T18:58:00.501-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T18:58:00.503-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T18:58:00.693-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T18:58:00.692-0500
2025-09-08T18:58:00.760-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=995cab0f-c2b8-64a3-14d9-779ebc7793a4 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-08T18:58:00.760-0500
2025-09-08T18:58:01.393-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=995cab0f-c2b8-64a3-14d9-779ebc7793a4 tf_rpc=ConfigureProvider timestamp=2025-09-08T18:58:01.393-0500
2025-09-08T18:58:01.402-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T18:58:32.409-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T18:58:32.410-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T18:58:32.927-0500 [ERROR] provider.terraform-provider-aws_v6.12.0_x5: Response contains error diagnostic: @module=sdk.proto diagnostic_detail="" diagnostic_severity=ERROR diagnostic_summary="creating EC2 Instance: operation error EC2: RunInstances, https response error StatusCode: 400, RequestID: 1c506bb5-71ae-4c94-b2e1-d05a8ac70b77, api error InvalidParameterValue: The t2.micro instance type does not support an AMI with a boot mode of UEFI. Only instance types built on the Nitro System support UEFI. Specify an instance type that supports UEFI, and try again." tf_req_id=490d3eb3-121b-78cc-3c14-372c2395d528 tf_resource_type=aws_instance @caller=github.com/hashicorp/terraform-plugin-go@v0.28.0/tfprotov5/internal/diag/diagnostics.go:58 tf_proto_version=5.9 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ApplyResourceChange timestamp=2025-09-08T18:58:32.927-0500
2025-09-08T18:58:32.932-0500 [ERROR] vertex "aws_instance.app-dev" error: creating EC2 Instance: operation error EC2: RunInstances, https response error StatusCode: 400, RequestID: 1c506bb5-71ae-4c94-b2e1-d05a8ac70b77, api error InvalidParameterValue: The t2.micro instance type does not support an AMI with a boot mode of UEFI. Only instance types built on the Nitro System support UEFI. Specify an instance type that supports UEFI, and try again.
2025-09-08T18:58:32.945-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=65935
2025-09-08T19:01:28.207-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T19:01:28.208-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T19:01:28.208-0500 [INFO]  CLI args: []string{"terraform", "apply", "-auto-approve"}
2025-09-08T19:01:28.209-0500 [INFO]  CLI command args: []string{"apply", "-auto-approve"}
2025-09-08T19:01:28.783-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T19:01:28.797-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:01:29.038-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:01:29.036-0500
2025-09-08T19:01:29.608-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67021
2025-09-08T19:01:29.609-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:01:29.756-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:01:29.755-0500
2025-09-08T19:01:29.831-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67024
2025-09-08T19:01:29.831-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T19:01:29.832-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:01:29.983-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:01:29.981-0500
2025-09-08T19:01:30.051-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=4906b0d4-62d7-2286-ecc7-23502da16941 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base timestamp=2025-09-08T19:01:30.051-0500
2025-09-08T19:01:30.776-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=4906b0d4-62d7-2286-ecc7-23502da16941 tf_rpc=ConfigureProvider timestamp=2025-09-08T19:01:30.776-0500
2025-09-08T19:01:30.795-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .tags: planned value cty.UnknownVal(cty.Map(cty.String)) does not match config value cty.MapVal(map[string]cty.Value{"CreationDate":cty.UnknownVal(cty.String).RefineNotNull(), "Name":cty.StringVal("test1Earth")})
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T19:01:31.292-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:01:31.302-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:01:31.302-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T19:01:31.511-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T19:01:31.721-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T19:01:31.938-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67035
2025-09-08T19:01:32.026-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T19:01:32.028-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:01:32.175-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:01:32.174-0500
2025-09-08T19:01:32.242-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_req_id=6ad62f6a-5a1b-39e5-be23-6d2a13bac22b timestamp=2025-09-08T19:01:32.241-0500
2025-09-08T19:01:32.863-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=6ad62f6a-5a1b-39e5-be23-6d2a13bac22b tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T19:01:32.863-0500
2025-09-08T19:01:32.892-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .cpu_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ebs_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .private_dns_name_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .primary_network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .root_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .capacity_reservation_specification: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .enclave_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ephemeral_block_device: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .maintenance_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .network_interface: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .instance_market_options: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2025-09-08T19:01:32.892-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T19:01:47.444-0500 [WARN]  Provider "provider[\"registry.terraform.io/hashicorp/aws\"]" produced an unexpected new value for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .hibernation: was null, but now cty.False
      - .credit_specification: block count changed from 0 to 1
2025-09-08T19:01:47.474-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=67063
2025-09-08T19:07:04.859-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T19:07:04.860-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T19:07:04.860-0500 [INFO]  CLI args: []string{"terraform", "plan"}
2025-09-08T19:07:04.860-0500 [INFO]  CLI command args: []string{"plan"}
2025-09-08T19:07:05.421-0500 [INFO]  backend/local: starting Plan operation
2025-09-08T19:07:05.430-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:07:05.669-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:07:05.667-0500
2025-09-08T19:07:06.252-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=68795
2025-09-08T19:07:06.253-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:07:06.400-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:07:06.398-0500
2025-09-08T19:07:06.472-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=68808
2025-09-08T19:07:06.472-0500 [INFO]  backend/local: plan calling Plan
2025-09-08T19:07:06.474-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:07:06.619-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:07:06.618-0500
2025-09-08T19:07:06.689-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_req_id=e24e12cd-715e-d20e-1f28-041a3b4ea08f tf_rpc=ConfigureProvider timestamp=2025-09-08T19:07:06.689-0500
2025-09-08T19:07:07.413-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=e24e12cd-715e-d20e-1f28-041a3b4ea08f tf_rpc=ConfigureProvider timestamp=2025-09-08T19:07:07.413-0500
2025-09-08T19:07:08.053-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:07:08.053-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
2025-09-08T19:07:08.054-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
2025-09-08T19:07:08.214-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T19:07:08.419-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:07:10.401-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
2025-09-08T19:07:10.407-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=68809
2025-09-08T19:07:10.410-0500 [INFO]  backend/local: plan operation completed
2025-09-08T19:14:17.461-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T19:14:17.462-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T19:14:17.462-0500 [INFO]  CLI args: []string{"terraform", "desotry"}
2025-09-08T19:14:17.463-0500 [INFO]  CLI command args: []string{"desotry"}
2025-09-08T19:14:20.644-0500 [INFO]  Terraform version: 1.13.0
2025-09-08T19:14:20.644-0500 [INFO]  Go runtime version: go1.24.5
2025-09-08T19:14:20.644-0500 [INFO]  CLI args: []string{"terraform", "destroy"}
2025-09-08T19:14:20.645-0500 [INFO]  CLI command args: []string{"destroy"}
2025-09-08T19:14:21.171-0500 [INFO]  backend/local: starting Apply operation
2025-09-08T19:14:21.192-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:14:21.431-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:14:21.429-0500
2025-09-08T19:14:22.013-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=71189
2025-09-08T19:14:22.015-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:14:22.158-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:14:22.157-0500
2025-09-08T19:14:22.231-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=71193
2025-09-08T19:14:22.232-0500 [INFO]  backend/local: apply calling Plan
2025-09-08T19:14:22.232-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:14:22.379-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:14:22.378-0500
2025-09-08T19:14:22.448-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: tf_rpc=ConfigureProvider tf_provider_addr=registry.terraform.io/hashicorp/aws @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=e26e3306-c045-2ff1-1a12-c12189727263 timestamp=2025-09-08T19:14:22.448-0500
2025-09-08T19:14:23.489-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @module=aws.aws-base tf_provider_addr=registry.terraform.io/hashicorp/aws tf_rpc=ConfigureProvider tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=e26e3306-c045-2ff1-1a12-c12189727263 @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 timestamp=2025-09-08T19:14:23.489-0500
2025-09-08T19:14:24.022-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[0], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:14:24.022-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[1], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:14:24.037-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_iam_user.lb[2], but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .permissions_boundary: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:14:24.364-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_security_group.sg_main, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .revoke_rules_on_delete: planned value cty.False for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .description: planned value cty.StringVal("Managed by Terraform") for a non-computed attribute
2025-09-08T19:14:24.587-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_eip.name, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .customer_owned_ipv4_pool: planned value cty.StringVal("") for a non-computed attribute
      - .tags: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
2025-09-08T19:14:26.677-0500 [WARN]  Provider "registry.terraform.io/hashicorp/aws" produced an invalid plan for aws_instance.app-dev, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .force_destroy: planned value cty.False for a non-computed attribute
      - .hibernation: planned value cty.False for a non-computed attribute
      - .user_data_replace_on_change: planned value cty.False for a non-computed attribute
      - .get_password_data: planned value cty.False for a non-computed attribute
      - .source_dest_check: planned value cty.True for a non-computed attribute
      - .root_block_device: block count in plan (1) disagrees with count in config (0)
      - .maintenance_options: block count in plan (1) disagrees with count in config (0)
      - .cpu_options: block count in plan (1) disagrees with count in config (0)
      - .metadata_options: block count in plan (1) disagrees with count in config (0)
      - .capacity_reservation_specification: block count in plan (1) disagrees with count in config (0)
      - .credit_specification: block count in plan (1) disagrees with count in config (0)
      - .enclave_options: block count in plan (1) disagrees with count in config (0)
      - .primary_network_interface: block count in plan (1) disagrees with count in config (0)
      - .private_dns_name_options: block count in plan (1) disagrees with count in config (0)
2025-09-08T19:14:26.689-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=71194
2025-09-08T19:14:26.692-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:14:26.861-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:14:26.860-0500
2025-09-08T19:14:26.933-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_req_id=aa59dd9d-2170-7bd0-d978-80054d7e01d6 tf_rpc=ConfigureProvider @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-08T19:14:26.933-0500
2025-09-08T19:14:27.588-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=aa59dd9d-2170-7bd0-d978-80054d7e01d6 tf_rpc=ConfigureProvider @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" timestamp=2025-09-08T19:14:27.588-0500
2025-09-08T19:14:27.602-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=71222
2025-09-08T19:14:29.386-0500 [INFO]  backend/local: apply calling Apply
2025-09-08T19:14:29.393-0500 [INFO]  provider: configuring client automatic mTLS
2025-09-08T19:14:29.598-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: configuring server automatic mTLS: timestamp=2025-09-08T19:14:29.597-0500
2025-09-08T19:14:29.671-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved credentials: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 @module=aws.aws-base tf_aws.credentials_source="SharedConfigCredentials: /Users/ricardo.llontop/.aws/credentials" tf_mux_provider="*schema.GRPCProviderServer" tf_req_id=7331caf5-1a8f-90b7-04ee-7de1a69eea9f tf_rpc=ConfigureProvider tf_provider_addr=registry.terraform.io/hashicorp/aws timestamp=2025-09-08T19:14:29.671-0500
2025-09-08T19:14:30.301-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Retrieved caller identity from STS: @caller=github.com/hashicorp/aws-sdk-go-base/v2@v2.0.0-beta.66/logging/tf_logger.go:39 tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=7331caf5-1a8f-90b7-04ee-7de1a69eea9f @module=aws.aws-base tf_mux_provider="*schema.GRPCProviderServer" tf_rpc=ConfigureProvider timestamp=2025-09-08T19:14:30.301-0500
2025-09-08T19:14:30.315-0500 [INFO]  Starting apply for aws_iam_user.lb[2]
2025-09-08T19:14:30.315-0500 [INFO]  Starting apply for aws_iam_user.lb[0]
2025-09-08T19:14:30.315-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.webingress
2025-09-08T19:14:30.315-0500 [INFO]  Starting apply for aws_iam_user.lb[1]
2025-09-08T19:14:30.315-0500 [INFO]  Starting apply for aws_vpc_security_group_ingress_rule.example
2025-09-08T19:14:30.317-0500 [INFO]  Starting apply for aws_instance.app-dev
2025-09-08T19:14:31.278-0500 [INFO]  Starting apply for aws_eip.name
2025-09-08T19:14:31.279-0500 [INFO]  Starting apply for aws_security_group.sg_main
2025-09-08T19:14:31.282-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: [INFO] Deleting EC2 EIP: eipalloc-0964b635b2fbfcbfc
2025-09-08T19:14:31.595-0500 [INFO]  provider.terraform-provider-aws_v6.12.0_x5: Deleting EC2 Security Group: id=sg-00ec9a4b7e17e6d90 tf_mux_provider="*schema.GRPCProviderServer" tf_provider_addr=registry.terraform.io/hashicorp/aws tf_req_id=7409c5be-c4b8-c46b-e3e1-7b5a70c97fe8 tf_rpc=ApplyResourceChange vpc_id=vpc-05443840a0b0fbc14 @module=aws tf_resource_type=aws_security_group @caller=github.com/hashicorp/terraform-provider-aws/internal/service/ec2/vpc_security_group.go:365 timestamp=2025-09-08T19:14:31.595-0500
2025-09-08T19:15:52.459-0500 [INFO]  provider: plugin process exited: plugin=.terraform/providers/registry.terraform.io/hashicorp/aws/6.12.0/darwin_arm64/terraform-provider-aws_v6.12.0_x5 id=71233
